<?xml version="1.0" encoding="UTF-8" standalone="no"?><mal:specification xmlns:mal="http://www.ccsds.org/schema/ServiceSchema" xmlns:com="http://www.ccsds.org/schema/COMSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <mal:area comment="This section details the M&amp;C services; the structures used by the services are detailed in section 4. Both the services and structures are defined in terms of the MO MAL, which is defined in [2], so it is possible to deploy them over any supported protocol and message transport.&#10;The services defined here are also specified in terms of the COM, which is defined in [3].&#10;To aid comprehension, several tables are included for each service and operation definition. The table formats are briefly described in section 1.6.3.2 and are the same as those used for the specification of the MO COM services in [3]. &#10;All service specifications in this document are part of the M&amp;C area, which has a short form number of '4'.&#10;" name="MC" number="4" version="129">
    <mal:service comment="The action service allows consumers to submit an action for execution and to subsequently monitor the execution progress of these actions via the COM activity tracking pattern. The progress of the action is split into two parts, firstly transfer from the consumer to the provider, and secondly execution in the provider. An action is submitted to the provider using the submitAction operation, the progress of which can be monitored using the COM activity tracking pattern, which completes when the action has been delivered to the provider. The action is then executed in the provider which can be also be monitored using the activity tracking pattern. The nominal sequence of action submission and execution monitoring are shown in Figure 3-1:&#10;&lt; insert sequence diag here &gt;&#10;&#10;The service also includes an operation, preCheckAction, which checks that an action would be accepted for execution without actually submitting it for execution. It is expected to be provided by local action proxies, rather than the remote system, to allow for localised checking of things such as link state, argument values, action safety, before sending the action over long and slow space links.&#10;The action service defines two types of objects, the first type is the action definition object that holds the description of an action with the list of required/optional arguments. The second type is the action object that holds details of a specific action instance namely a value for each of the arguments of the action.&#10;" name="Action" number="1" xsi:type="com:ExtendedServiceType">
      <mal:capabilitySet number="1">
        <mal:submitIP comment="The submitAction operation allows a consumer to submit an action to a provider for remote execution.&#10;" name="submitAction" number="1" supportInReplay="false">
          <mal:messages>
            <mal:submit comment="The actionInstId field of the submission shall contain the object instance identifier of the ActionInstance to be used for activity tracking events.&#10;The actionDetails part of the submission shall contain the argument values and related information of the action instance to be executed.&#10;If the defInstId of the supplied actionDetails field does not match a known ActionDefinition object then an UNKNOWN error shall be returned.&#10;The size of the argumentValues list of the ActionInstanceDetails structure shall be compared to the size of the argument list in the matched ActionDefinition object and an INVALID error shall be returned if they are not the same.&#10;If the ActionInstanceDetails structure contains an argumentIds field value then this shall be compared to the same field in the matched ActionDefinition object and must be the same size and contain the same values, an INVALID error shall be returned if this is not the case.&#10;If the ActionInstanceDetails structure contains an isRawValue field value then the size of this list shall be compared to the size of the argument list in the matched ActionDefinition object and an INVALID error shall be returned if they are not the same.&#10;If the supplied argument values do not match the attribute type specified in the action definition then an INVALID error shall be returned.&#10;A service provider may apply some deployment specific checks to the action instance and can return an INVALID error if they fail.&#10;If an error is raised then no action shall be executed.&#10;The SUBMIT acknowledgement shall be returned once the action has been accepted for execution but before execution starts.&#10;">
              <mal:field comment="" name="actionInstId">
                <mal:type area="MAL" list="false" name="Long"/>
              </mal:field>
              <mal:field comment="" name="actionDetails">
                <mal:type area="MC" list="false" name="ActionInstanceDetails" service="Action"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="The argument list contains one or more invalid arguments.&#10;">
              <mal:type area="COM" list="false" name="INVALID"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating list supplied.&#10;">
                <mal:type area="MAL" list="true" name="UInteger"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="Submitted action definition is unknown.&#10;">
              <mal:type area="MAL" list="false" name="UNKNOWN"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      
      <mal:dataTypes>
        <mal:composite comment="The ActionDefinitionDetails structure holds the definition information of an action.&#10;" name="ActionDefinitionDetails" shortFormPart="1">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <mal:field canBeNull="false" comment="The name of the action. Must not be empty or the wildcard value.&#10;" name="name">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The description of the action.&#10;" name="description">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
          <mal:field canBeNull="false" comment="Category of the action. Value taken from ActionCategory enumeration, although the use of an UOctet allows deployment specific extension. Extensions must use values greater than 127.&#10;" name="category">
            <mal:type area="MC" list="false" name="Severity"/>
          </mal:field>
          <mal:field canBeNull="false" comment="Total number of steps that will be reported if PROGRESS reporting is selected in the sent Action. 0 if PROGRESS reporting is not used.&#10;" name="progressStepCount">
            <mal:type area="MAL" list="false" name="UShort"/>
          </mal:field>
          <mal:field canBeNull="true" comment="The list of argument definitions. If no arguments are defined, then the complete list is replaced with a NULL.&#10;" name="arguments">
            <!--<mal:type area="MC" list="true" name="ArgumentDefinitionDetails"/>-->
            <mal:type area="MC" list="true" name="ArgumentDefinition"/>
          </mal:field>
          <mal:field canBeNull="true" comment="Optional list of argument definition identifiers. Allows the provider to verify that the correct arguments are being supplied when using the same field in the action instance.&#10;" name="argumentIds">
            <mal:type area="MAL" list="true" name="Identifier"/>
          </mal:field>
        </mal:composite>
        <mal:composite comment="The ActionInstanceDetails structure holds the information required for an instance of an Action such as the argument values to use.&#10;" name="ActionInstanceDetails" shortFormPart="2">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <mal:field canBeNull="false" comment="The object instance identifier of the ActionDefinition to be used.&#10;" name="defInstId">
            <mal:type area="MAL" list="false" name="Long"/>
          </mal:field>
          <mal:field canBeNull="false" comment="If TRUE, then an activity event of type Execution is required for the STARTED stage.&#10;" name="stageStartedRequired">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <mal:field canBeNull="false" comment="If TRUE, then activity events of type Execution are required for the PROGRESS stages.&#10;" name="stageProgressRequired">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <mal:field canBeNull="false" comment="If TRUE, then an activity event of type Execution is required for the COMPLETION stage.&#10;" name="stageCompletedRequired">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <mal:field canBeNull="true" comment="List containing the values of the arguments. The ordering of the list matches that of the definition. If a value for a particular entry is not being supplied, then its position is filled with a NULL value. If no arguments are defined, then the complete list is replaced with a NULL.&#10;" name="argumentValues">
            <mal:type area="MC" list="true" name="AttributeValue"/>
          </mal:field>
          <mal:field canBeNull="true" comment="Optional list of argument definition identifiers. Allows the provider to verify that the correct arguments are being supplied. The ordering of the list matches that of the argument list of the action definition.&#10;" name="argumentIds">
            <mal:type area="MAL" list="true" name="Identifier"/>
          </mal:field>
          <mal:field canBeNull="true" comment="Optional list of Booleans that determine whether the supplied argument values are raw or converted. If the Boolean for a particular value is TRUE or NULL then that value is assumed to be raw. If the complete isRawValue list is null then all arguments are assumed to be raw values. The ordering of the list matches that of the argument list of the action definition.&#10;" name="isRawValue">
            <mal:type area="MAL" list="true" name="Boolean"/>
          </mal:field>
        </mal:composite>
        <mal:composite comment="The ActionCreationRequest contains all the fields required when creating a new action in a provider.&#10;" name="ActionCreationRequest" shortFormPart="3">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <mal:field canBeNull="false" comment="The name of the action. Must not be empty or the wildcard value.&#10;" name="name">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The action definition details.&#10;" name="actionDefDetails">
            <mal:type area="MC" service="Action" list="false" name="ActionDefinitionDetails"/>
          </mal:field>
        </mal:composite>
        <mal:enumeration comment="Contains the default Action category values. It is implementation specific what the meaning of the values are in a particular context.&#10;" name="ActionCategory" shortFormPart="4">
          <mal:item comment="Default category.&#10;" nvalue="1" value="DEFAULT"/>
          <mal:item comment="Category for high priority actions.&#10;" nvalue="2" value="HIPRIORITY"/>
          <mal:item comment="Category for critical actions.&#10;" nvalue="3" value="CRITICAL"/>
        </mal:enumeration>
      </mal:dataTypes>
      
      <com:features>
        <com:objects comment="The definitions of the actions shall be represented as ActionDefinition COM objects.&#10;Instances of an action that are submitted to a provider using the submitAction operation shall be represented as ActionInstance COM object.&#10;The object instance identifier for an ActionInstance object shall be populated by the consumer.&#10;The ActionInstance object shall use the related link to indicate which action definition object it uses.&#10;The source link of the ActionDefinition object should be the object that caused it to be created, most likely a COM OperationActivity object.&#10;Instances of an action that are submitted to a provider using the submitAction operation shall link to the submitAction OperationActivity object using the source link.&#10;&#10;">
          <com:object name="ActionDefinitionDetails" number="1">
            <com:objectType>
              <mal:type area="MC" list="false" name="ActionDefinitionDetails" service="Action"/>
            </com:objectType>
                        <com:relatedObject comment=""/>
                        <com:sourceObject comment=""/>
          </com:object>
          <com:object name="ActionInstance" number="2">
            <com:objectType>
              <mal:type area="MC" list="false" name="ActionInstanceDetails" service="Action"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType area="MC" number="1" service="Action"/>
            </com:relatedObject>
                        <com:sourceObject comment=""/>
          </com:object>
        </com:objects>
        <com:archiveUsage comment="ActionDefinition objects should be stored in the COM archive.&#10;When an action is sent with the submitAction operation, the ActionInstance object should be stored in the COM archive by the consumer.&#10;"/>
        <com:activityUsage comment="The COM Activity service may be used to monitor the transfer and execution of the submitAction operation.&#10;The COM Activity service may be used to monitor the transfer and execution of action instances.&#10;The COM activity events shall be generated as defined in the COM activity tracking service for the submitAction operation.&#10;A Release activity event for the action instance shall be generated when an action is released from a consumer using the submitAction operation.&#10;An Acceptance activity event for the action instance shall be generated when an action is received by the destination provider as part of the submitAction operation.&#10;The source link of the activity events for the action instance shall be the ActionInstance object.&#10;In all activity execution events for the action instance the ActivityExecution.stageCount field shall be set to 2 plus the total number of progress stages.&#10;In the activity execution event, when notification of an action starting is requested, the ActivityExecution.executionStage field shall be set to 1.&#10;In the activity execution event, when notification of an action progress is requested, the ActivityExecution.executionStage field shall be set to 1 plus the current progress stage. &#10;In the activity execution event, when notification of an action completion is requested, the ActivityExecution.executionStage field shall be set to 2 plus the total number of progress stages.&#10;&#10;"/>
      </com:features>
    </mal:service>
    <mal:service comment="The parameter service allows the user to subscribe to parameter value updates. A single PUBSUB operation is provided for monitoring and publishing of parameter values.&#10;A parameter values also contains a calculation of the validity of the parameter, the flow chart for this calculation is provided in Figure x-x:&#10;&lt;&lt; validity calculation flow chart &gt;&gt;&#10;&#10;The generation of value updates can be controlled using the enableGeneration operation, which supports the use of groups. Groups must reference parameter definitions only.&#10;The parameter service does not include any value checking, this is delegated to the check service.&#10;Parameter definitions are maintained using the operations defined in this service but storage of definitions is delegated to the COM archive.&#10;" name="Parameter" number="2" xsi:type="com:ExtendedServiceType">
      <mal:dataTypes>
        <mal:enumeration comment="Validity is an enumeration representing the possible validity states of a parameter.&#10;" name="Validity" shortFormPart="3">
          <mal:item comment="The validity expression has been evaluated to FALSE." nvalue="1" value="INVALID"/>
          <mal:item comment="The validity expression either has been evaluated to TRUE, or there is no expression defined. If the parameter definition containing the validity expression contains a conversion, then this has succeeded also.&#10;" nvalue="2" value="VALID"/>
          <mal:item comment="The validity expression either has evaluated to TRUE or there is no validity defined, but the converted value of the parameter definition containing the validity expression has failed conversion.&#10;" nvalue="3" value="VALID_RAW_ONLY"/>
          <mal:item comment="The validity of the validity expression has been evaluated to FALSE and therefore cannot be used to verify the current value." nvalue="4" value="UNVERIFIED"/>
          <mal:item comment="The parameter has a time out associated which has expired." nvalue="5" value="EXPIRED"/>
        </mal:enumeration>
        <mal:composite comment="The ParameterDefinition structure holds a parameter definition. The conversion field defines the conditions where the relevant conversion is applied. For onboard parameters, the monitoring interval should be a multiple of the minimum sampling interval of that parameter.&#10;" name="ParameterDefinition" shortFormPart="1">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <mal:field canBeNull="false" comment="The name of the parameter. Must not be empty or the wildcard value.&#10;" name="name">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The description of the parameter. May be empty.&#10;" name="description">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
          <mal:field canBeNull="false" comment="Holds the attribute short form part of the raw type of the parameter, e.g., for a MAL::String parameter it shall hold 15.&#10;" name="rawType">
            <mal:type area="MAL" list="false" name="Octet"/>
          </mal:field>
          <mal:field canBeNull="true" comment="The unit for the raw value. If NULL then raw type has no unit.&#10;" name="rawUnit">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
          <mal:field canBeNull="false" comment="Controls whether updates for this parameter are to be generated.&#10;" name="generationEnabled">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <mal:field canBeNull="false" comment="Periodic update interval. No periodic updates to be generated if this is set to '0'.&#10;" name="updateInterval">
            <mal:type area="MAL" list="false" name="Duration"/>
          </mal:field>
          <mal:field canBeNull="true" comment="Expression that determines this parameter's validity state. Can be NULL if no validity check is required or validity is calculated by implementation-specific mechanisms.&#10;" name="validityExpression">
            <mal:type area="MC" list="false" name="ParameterExpression"/>
          </mal:field>
          <mal:field canBeNull="true" comment="If present then parameter has a converted type.&#10;" name="conversion">
            <mal:type area="MC" list="false" name="ParameterConversion" service="Parameter"/>
          </mal:field>
        </mal:composite>
        <mal:composite comment="This structure holds a specific time-stamped value of the parameter. The type of the value shall match that specified in the parameter definition.&#10;" name="ParameterValue" shortFormPart="2">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <mal:field canBeNull="false" comment="The parameter validity state." name="validityState">
            <mal:type area="MC" list="false" name="Validity" service="Parameter"/>
          </mal:field>
          <mal:field canBeNull="true" comment="The parameter raw value. The value of NULL is a valid value and carries no special significance in the parameter service.&#10;" name="rawValue">
            <mal:type area="MAL" list="false" name="Attribute"/>
          </mal:field>
          <mal:field canBeNull="true" comment="The parameter converted value. The value of NULL is a valid value and carries no special significance in the parameter service.&#10;" name="convertedValue">
            <mal:type area="MAL" list="false" name="Attribute"/>
          </mal:field>
        </mal:composite>
        <mal:composite comment="The ParameterConversion structure holds information about the conversions to be applied to a parameter.&#10;" name="ParameterConversion" shortFormPart="4">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <mal:field canBeNull="false" comment="Holds the attribute short form part of the converted type of the parameter, e.g., for a MAL::String parameter it shall hold 15.&#10;" name="convertedType">
            <mal:type area="MAL" list="false" name="Octet"/>
          </mal:field>
          <mal:field canBeNull="true" comment="The converted parameter unit. If NULL then converted type has no unit.&#10;" name="convertedUnit">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
          <mal:field canBeNull="false" comment="If checks are associated to this parameter using the check service, if this value is TRUE, then they should check the converted value; otherwise they should check the raw value. This field is ignored if no checks are associated to this parameter.&#10;" name="checkConverted">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The conversions to be applied.&#10;" name="conversionConditions">
            <mal:type area="MC" list="true" name="ConditionalReference"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="The definitions of the parameters shall be represented as ParameterDefinition COM objects.&#10;Parameter value updates shall be represented as ParameterValue COM objects.&#10;The ParameterValue object shall use the related link to indicate which ParameterDefinition object it uses.&#10;The source link of the ParameterDefinition object should be the object that caused it to be created, most likely a COM OperationActivity object.&#10;The source link of the ParameterValue object should be the object that caused the update to be generated.&#10;&#10;">
          <com:object name="ParameterDefinition" number="1">
            <com:objectType>
              <mal:type area="MC" list="false" name="ParameterDefinition" service="Parameter"/>
            </com:objectType>
          </com:object>
          <com:object name="ParameterValue" number="2">
            <com:objectType>
              <mal:type area="MC" list="false" name="ParameterValue" service="Parameter"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType area="MC" number="1" service="Parameter"/>
            </com:relatedObject>
          </com:object>
        </com:objects>
        <com:archiveUsage comment="ParameterDefinition objects should be stored in the COM archive.&#10;When a parameter value update is published, the ParameterValue object should be stored in the COM archive.&#10;"/>
      </com:features>
    </mal:service>
    <mal:service comment="The alert service defines the structures and patterns for the publishing and monitoring of alerts. The alert service uses COM event service to monitor and publish alert events.&#10;The generation of alerts can be controlled using the enableGeneration operation, which supports the use of groups. Groups must reference alert definitions only.&#10;Alert definitions are maintained using the operations defined in this service but storage of definitions is delegated to the COM archive.&#10;" name="Alert" number="3" xsi:type="com:ExtendedServiceType">
      <mal:capabilitySet number="1">
        <mal:submitIP comment="The enableGeneration operation allows a consumer to control whether updates for specific alerts are generated or not. It allows the consumer to select the alerts directly or indirectly using groups.&#10;" name="enableGeneration" number="1" supportInReplay="false">
          <mal:messages>
            <mal:submit comment="The first part of the request shall be a Boolean indicating whether the supplied object instance identifiers are group objects or alert objects.&#10;If the initial Boolean is TRUE then the object instance identifiers are group identifiers, otherwise they shall be alert identifiers.&#10;The request shall include a list of object instance identifiers and Boolean value pairs.&#10;The wildcard value of '0' in the list of object instance identifiers shall be supported and matches all alerts of the provider.&#10;For the Boolean value in the InstanceBooleanPair a value of TRUE requests that updates of the alert shall be generated, a value of FALSE requests that updates will not be generated.&#10;If a requested alert or group is unknown then an UNKNOWN error shall be returned.&#10;If a requested group does not contain alert objects then an INVALID error shall be returned.&#10;The provider should update the alert in the COM archive if the generation enabled value is changed.&#10;">
              <mal:type area="MAL" list="false" name="Boolean"/>
              <mal:type area="COM" list="true" name="InstanceBooleanPair"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied groups is not a group of alerts.&#10;">
              <mal:type area="COM" list="false" name="INVALID"/>
              <mal:extraInformation comment="The extra information field contains the indexes of the erroneous values from the originating list supplied.&#10;">
                <mal:type area="MAL" list="true" name="UInteger"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One or more of the requested alerts is unknown.&#10;">
              <mal:type area="MAL" list="false" name="UNKNOWN"/>
              <mal:extraInformation comment="The indexes of the error values shall be contained in the extra information field.&#10;">
                <mal:type area="MAL" list="true" name="UInteger"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:composite comment="The AlertDefinition provides the definition of an alert including any argument definitions.&#10;" name="AlertDefinition" shortFormPart="1">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <mal:field canBeNull="false" comment="Alert name. Must not be empty or wildcard value.&#10;" name="name">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The description of the alert.&#10;" name="description">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
          <mal:field canBeNull="false" comment="Severity of the alert.&#10;" name="severity">
            <mal:type area="MC" list="false" name="Severity"/>
          </mal:field>
          <mal:field canBeNull="false" comment="Controls whether instances of this alert are to be generated.&#10;" name="generationEnabled">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The list of argument definitions." name="arguments">
            <mal:type area="MC" list="true" name="ArgumentDefinition"/>
          </mal:field>
          <mal:field canBeNull="true" comment="Optional list of argument definition identifiers. Allows the provider to verify that the correct arguments are being supplied." name="argumentIds">
            <mal:type area="MAL" list="true" name="Identifier"/>
          </mal:field>
        </mal:composite>
        <mal:composite comment="The AlertEvent structure holds an instance of an alert defined using an AlertDefinition.&#10;" name="AlertEvent" shortFormPart="2">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <mal:field canBeNull="true" comment="List containing the values of the arguments. The ordering of the list matches that of the definition. If a value for a particular entry is not being supplied, then its position is filled with a NULL value. If no arguments are defined, then the complete list is replaced with a NULL.&#10;" name="argumentValues">
            <mal:type area="MC" list="true" name="ArgumentValue"/>
          </mal:field>
          <mal:field canBeNull="true" comment="Optional list of argument definition identifiers. Allows the consumer to verify that the correct arguments are being supplied. The ordering of the list matches that of the argument list of the alert definition.&#10;" name="argumentIds">
            <mal:type area="MAL" list="true" name="Identifier"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="The definitions of the alerts shall be represented as AlertDefinition COM objects.&#10;Instances of an alert shall be represented as an AlertEvent COM event.&#10;The AlertEvent object shall use the related link to indicate which AlertDefinition object it uses.&#10;The source link of the AlertDefinition object should be the object that caused it to be created, most likely a COM OperationActivity object.&#10;&#10;">
          <com:object name="AlertDefinition" number="1">
            <com:objectType>
              <mal:type area="MC" list="false" name="AlertDefinition" service="Alert"/>
            </com:objectType>
          </com:object>
        </com:objects>
        <com:events comment="When an alert is generated it shall be represented as a COM event.&#10;The event shall be published using the COM event service.&#10;The source link of the alert event shall point to the object that caused the event to be generated.&#10;">
          <com:event comment="The AlertEvent shall be raised when an enabled alert is published.&#10;" name="AlertEvent" number="2">
            <com:objectType>
              <mal:type area="MC" list="false" name="AlertEvent" service="Alert"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType area="MC" number="1" service="Alert"/>
            </com:relatedObject>
            <com:sourceObject comment="The source of the Alert.&#10;"/>
          </com:event>
        </com:events>
        <com:archiveUsage comment="AlertDefinition objects should be stored in the COM archive.&#10;When an alert event is published, the AlertEvent object should be stored in the COM archive by the publisher.&#10;"/>
      </com:features>
    </mal:service>
    <mal:service comment="The check service allows the user to monitor and control the checking of parameters against check definitions including limit sets.&#10;The check service uses COM event service to monitor and publish check evaluation result events.&#10;The check service allows the consumer to define each check and then link the check definition to a parameter to be checked. Figure 3-3 shows the nominal sequence of operations for the check service:&#10; ---- check sequence diag ----&#10;Check service nominal sequence&#10;A check consumer firstly subscribes for check events before linking some already existing checks to some parameters. The figure shows how check evaluation is normally triggered by either an expiration of a periodic interval or a change in the monitored value, however, the service also supports the optional ability for consumers to trigger the evaluation of checks using the triggerCheck operation. Finally if a check event has not been generated for a configurable period of time, known as the maximum reporting interval, an event is generated regardless of whether the check is in violation or not. This maximum reporting interval supports the situation where regular confirmation of the non-violating state of a check is required.&#10;The list of currently violating checks can be obtained using the getCurrentTransitionList operation; to get a full report including non-violating checks the getSummaryReport operation should be used.&#10;The following figure (3-4) shows the flow chart for determining the status of a check:&#10;--- check state diag -- &#10;Flow Chart for Determining the Status of a Check&#10;Each time a check is evaluated, the procedure indicated in the flow chart depicted in figure 3-4 is performed to calculate the check result. Each check link can have a condition included as part of it which determines whether the check should be applied or not; this allows several checks to be associated to a single parameter and applied in different conditions.&#10;The service defines four basic check types, constant, reference, delta, and limit. A constant check is used to ensure that a parameter value either does not change or does not change from a set of specific values.&#10;The Reference and Delta checks are compared against another value called a reference value. The reference value can be taken from either another parameter or the parameter being checked, and can be the previous value or a value in the past, specified by using a delta time in the ReferenceValue composite. This does not affect the logic of the flow chart above.&#10;The final check type, limit, checks to see if a parameter value is either inside or outside a range of values.&#10;The service only publishes check results (as check transition events) when either the result changes from the previous value (for example a check starts to violate), or the maximum reporting interval expires. This reduces the amount of 'no change' reporting data being distributed. For situations where regular reporting of the check result is required, even when no change is detected, a low maximum reporting interval value should be specified.&#10;" name="Check" number="4" xsi:type="com:ExtendedServiceType">
      <mal:capabilitySet number="1">
        <mal:progressIP comment="The getSummaryReport operation allows a consumer to obtain the status of a number of checks definitions and the result of any check evaluations linked to them.&#10;" name="getSummaryReport" number="2" supportInReplay="true">
          <mal:messages>
            <mal:progress comment="The supplied list shall hold one or more check definition object instance identifiers of which a check report is required.&#10;An empty list shall report on all definitions.&#10;If a requested definition is unknown then an UNKNOWN error shall be returned.&#10;">
              <mal:type area="MAL" list="true" name="Long"/>
            </mal:progress>
            <mal:acknowledgement/>
            <mal:update comment="The returned updates and final response shall contain an entry for each requested check definition.&#10;The first part of the update shall be the check definition object instance identifier.&#10;The second part shall be a list of check link details and check results associated with that check definition.&#10;&#10;">
              <mal:type area="MAL" list="false" name="Long"/>
              <mal:type area="MC" list="true" name="CheckSummary" service="Check"/>
            </mal:update>
            <mal:response>
              <mal:type area="MAL" list="false" name="Long"/>
              <mal:type area="MC" list="true" name="CheckSummary" service="Check"/>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more of the checks specified in the list do not exist.&#10;">
              <mal:type area="MAL" list="false" name="UNKNOWN"/>
              <mal:extraInformation comment="The indexes of the error values shall be contained in the extra information field.&#10;">
                <mal:type area="MAL" list="true" name="UInteger"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:progressIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="3">
        <mal:submitIP comment="The enableCheck operation allows a consumer to control whether evaluation of a set of check is performed or not. It allows the consumer to select the checks directly or indirectly using groups.&#10;" name="enableCheck" number="4" supportInReplay="false">
          <mal:messages>
            <mal:submit comment="The first part of the request shall be a Boolean indicating whether the supplied object instance identifiers are group objects or CheckLink objects.&#10;If the initial Boolean is TRUE then the object instance identifiers are group identifiers, otherwise they shall be CheckLink object instance identifiers.&#10;The request shall include a list of group or CheckLink object instance identifiers and Boolean value pairs.&#10;The wildcard value of '0' in the list of object instance identifiers shall be supported and matches all check links of the provider.&#10;For the Boolean value in the InstanceBooleanPair a value of TRUE requests that evaluations of the link shall be performed, a value of FALSE requests that evaluations will not be performed.&#10;If a requested link or group is unknown then an UNKNOWN error shall be returned.&#10;If a requested group is does not contain either check definition or check link objects then an INVALID error shall be returned.&#10;The provider should update the check link in the COM archive if the evaluation enabled value is changed.&#10;">
              <mal:type area="MAL" list="false" name="Boolean"/>
              <mal:type area="COM" list="true" name="InstanceBooleanPair"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more of the requested links is unknown.&#10;">
              <mal:type area="MAL" list="false" name="UNKNOWN"/>
              <mal:extraInformation comment="The indexes of the error values shall be contained in the extra information field.&#10;">
                <mal:type area="MAL" list="true" name="UInteger"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One of the supplied groups is not a group of either check definition objects or check link objects.&#10;">
              <mal:type area="COM" list="false" name="INVALID"/>
              <mal:extraInformation comment="The extra information field contains the indexes of the erroneous values from the originating list supplied.&#10;">
                <mal:type area="MAL" list="true" name="UInteger"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:enumeration comment="The CheckState enumeration holds the possible basic states of a check. The meaning of the NOT_OK value is check specific and detailed in the relevant check type definition.&#10;" name="CheckState" shortFormPart="8">
          <mal:item comment="The check is disabled." nvalue="1" value="DISABLED"/>
          <mal:item comment="The check is enabled but has not passed the selection condition expression." nvalue="2" value="UNCHECKED"/>
          <mal:item comment="Check is enabled, has passed the selection condition, but the entity being checked is not in a valid state and therefore has not been checked.&#10;" nvalue="3" value="INVALID"/>
          <mal:item comment="All checks are OK." nvalue="4" value="OK"/>
          <mal:item comment="All checks are not OK." nvalue="5" value="NOT_OK"/>
        </mal:enumeration>
        <mal:composite comment="The CheckDefinition structure holds the definition of a check.&#10;" name="CheckDefinition">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <mal:field canBeNull="false" comment="The name of the check definition. Must not be empty or the wildcard value.&#10;" name="name">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The description of the check. May be empty.&#10;" name="description">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
          <mal:field canBeNull="false" comment="Indicates the seriousness of the violation based on its possible negative consequences." name="checkSeverity">
            <mal:type area="MC" list="false" name="Severity"/>
          </mal:field>
          <mal:field canBeNull="false" comment="Maximum interval that can elapse between generations of CheckResult updates. If this value expires, then a CheckResult is generated with the same state for the previous and current state. If set to '0', then no maximum reporting interval shall be applied.&#10;" name="maxReportingInterval">
            <mal:type area="MAL" list="false" name="Duration"/>
          </mal:field>
          <mal:field canBeNull="false" comment="Number of consecutive valid samples passing the check for the check to be OK. Must be greater than zero.&#10;" name="nominalCount">
            <mal:type area="MAL" list="false" name="UInteger"/>
          </mal:field>
          <mal:field canBeNull="false" comment="Number of consecutive valid samples violating the check to be in violation. Must be greater than zero.&#10;" name="violationCount">
            <mal:type area="MAL" list="false" name="UInteger"/>
          </mal:field>
        </mal:composite>
        <mal:composite comment="The ConstantCheck structure holds the constant values to compare against for a consistency check. The result of the evaluation shall be held in the CheckResult value results field.&#10;" name="ConstantCheck" shortFormPart="1">
          <mal:extends>
            <mal:type area="MC" list="false" name="CheckDefinition" service="Check"/>
          </mal:extends>
          <mal:field canBeNull="false" comment="The operator to be used to perform the check." name="operator">
            <mal:type area="COM" list="false" name="ExpressionOperator" service="Archive"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The set of constant values to be checked against. An empty list means that any value change triggers the check.&#10;" name="values">
            <mal:type area="MC" list="true" name="AttributeValue"/>
          </mal:field>
        </mal:composite>
        <mal:composite comment="The ReferenceCheck structure holds the key to another entity to compare against for a consistency check. The result of the evaluation shall be held in the CheckResult value results field.&#10;" name="ReferenceCheck" shortFormPart="2">
          <mal:extends>
            <mal:type area="MC" list="false" name="CheckDefinition" service="Check"/>
          </mal:extends>
          <mal:field canBeNull="false" comment="The operator to be used to perform the check." name="operator">
            <mal:type area="COM" list="false" name="ExpressionOperator" service="Archive"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The value to check against." name="checkReference">
            <mal:type area="MC" list="false" name="ReferenceValue" service="Check"/>
          </mal:field>
        </mal:composite>
        <mal:composite comment="The DeltaCheck defines a delta transition check. It can be time-based or sample-based. Violations that fall below the lower limit shall be represented by a FALSE in the CheckResult evaluation result fields. Violations that fall above the upper limit shall be represented by a TRUE in the CheckResult evaluation result fields.&#10;" name="DeltaCheck" shortFormPart="3">
          <mal:extends>
            <mal:type area="MC" list="false" name="CheckDefinition" service="Check"/>
          </mal:extends>
          <mal:field canBeNull="false" comment="The value to compare the current value against." name="checkReference">
            <mal:type area="MC" list="false" name="ReferenceValue" service="Check"/>
          </mal:field>
          <mal:field canBeNull="false" comment="If TRUE, then the safe (nonviolating) values lie outside the specified threshold range.&#10;" name="violateInRange">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <mal:field canBeNull="false" comment="If TRUE, then the delta values are calculated based on when the value updates; otherwise, the delta value is calculated based on an internally calculated time interval.&#10;" name="sampleBased">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <mal:field canBeNull="false" comment="If TRUE, then the thresholds contain value deltas. If FALSE, they contain percentage deltas.&#10;" name="valueDelta">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <mal:field canBeNull="true" comment="The lower threshold of the delta value. Must be of the correct type for the entity being checked. Must be a Float if percentage threshold.&#10;" name="lowerThreshold">
            <mal:type area="MAL" list="false" name="Attribute"/>
          </mal:field>
          <mal:field canBeNull="true" comment="The upper threshold of the delta value. Must be of the correct type for the entity being checked. Must be a Float if percentage threshold.&#10;" name="upperThreshold">
            <mal:type area="MAL" list="false" name="Attribute"/>
          </mal:field>
        </mal:composite>
        <mal:composite comment="The LimitCheck defines a high and low limit check. If ranges overlap, the most severe check shall be applied. It is valid to supply only one limit; the other limit is assumed to be the relevant maximum supported by the type being checked in this case. Violations that fall below the lower limit shall be represented by a FALSE in the CheckResult evaluation result fields. Violations that fall above the upper limit shall be represented by a TRUE in the CheckResult evaluation result fields.&#10;" name="LimitCheck" shortFormPart="4">
          <mal:extends>
            <mal:type area="MC" list="false" name="CheckDefinition" service="Check"/>
          </mal:extends>
          <mal:field canBeNull="false" comment="If TRUE, then the safe (nonviolating) values lie outside the specified limits range.&#10;" name="violateInRange">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <mal:field canBeNull="true" comment="The lower limit of the value. Must be of the correct type for the entity being checked." name="lowerLimit">
            <mal:type area="MAL" list="false" name="Attribute"/>
          </mal:field>
          <mal:field canBeNull="true" comment="The upper limit of the value. Must be of the correct type for the entity being checked." name="upperLimit">
            <mal:type area="MAL" list="false" name="Attribute"/>
          </mal:field>
        </mal:composite>
        <mal:composite comment="The CheckLink structure represents the link from a check definition to a check result for a specific parameter.&#10;" name="CheckLink" shortFormPart="5">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <mal:field canBeNull="false" comment="TRUE if the check instance is enabled.&#10;" name="checkEnabled">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <mal:field canBeNull="false" comment="If TRUE then any change to state or value of the parameter, or the check condition will trigger a check evaluation.&#10;" name="checkOnChange">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <mal:field canBeNull="false" comment="If set to TRUE the converted value field of the parameter value should be used, otherwise the raw value field should be used.&#10;" name="useConverted">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The interval that a check should be applied. Only applicable if checkOnChange is FALSE. If '0', then no periodic checking shall be performed, and a check will be triggered by another mechanism.&#10;" name="checkInterval">
            <mal:type area="MAL" list="false" name="Duration"/>
          </mal:field>
          <mal:field canBeNull="true" comment="Should this check be applied, if NULL then always applied.&#10;" name="condition">
            <mal:type area="MC" list="false" name="ParameterExpression"/>
          </mal:field>
        </mal:composite>
        <mal:composite comment="The CheckResult structure holds basic information about the check state and the value of the parameter at the time of the check. The time stamp of the event is the transition time of the check.&#10;" name="CheckResult" shortFormPart="6">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <mal:field canBeNull="false" comment="The previous evaluation state of the check. Initially UNCHECKED for the first transition of a check. For check evaluations that do not detect a check transition, this value will be the same as the currentCheckState.&#10;" name="previousCheckState">
            <mal:type area="MC" list="false" name="CheckState" service="Check"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The current evaluation state of the check&#10;" name="currentCheckState">
            <mal:type area="MC" list="false" name="CheckState" service="Check"/>
          </mal:field>
          <mal:field canBeNull="true" comment="This is the value of the entity at the time of a check state transition, or if it is an update due to the CheckDefinition maxReportingInterval expiring, then it is the value of the entity when the interval expired.&#10;" name="checkedValue">
            <mal:type area="MAL" list="false" name="Attribute"/>
          </mal:field>
          <mal:field canBeNull="true" comment="When the previous state of the check is NOT_OK, this shall hold the previous check evaluation result. NULL if previous state is not NOT_OK.&#10;" name="previousEvaluationResult">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <mal:field canBeNull="true" comment="When the current state of the check is NOT_OK, this shall hold the current check evaluation result. NULL if current state is not NOT_OK.&#10;" name="currentEvaluationResult">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
        </mal:composite>
        <mal:composite comment="The ReferenceValue structure defines a value to compare against. A validCount of '1' and deltaTime of '0' would compare against the previous sample value.&#10;" name="ReferenceValue" shortFormPart="7">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <mal:field canBeNull="false" comment="Number of valid samples that should be collected to update the reference value.&#10;" name="validCount">
            <mal:type area="MAL" list="false" name="UShort"/>
          </mal:field>
          <mal:field canBeNull="false" comment="Delta time from now into the past from which the reference value should be sampled.&#10;" name="deltaTime">
            <mal:type area="MAL" list="false" name="Duration"/>
          </mal:field>
          <mal:field canBeNull="true" comment="The parameter to compare against. If NULL, then it should be compared against itself.&#10;" name="parameterId">
            <mal:type area="COM" list="false" name="ObjectKey"/>
          </mal:field>
        </mal:composite>
        <mal:composite comment="The CheckResultFilter structure holds a filter for the current check result transition information.&#10;" name="CheckResultFilter" shortFormPart="9">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <mal:field canBeNull="false" comment="The list of check definition object instance identifiers to filter on. Empty list means match all.&#10;" name="checkFilter">
            <mal:type area="MAL" list="true" name="Long"/>
          </mal:field>
          <mal:field canBeNull="false" comment="List of parameter object instance identifiers to filter on. Empty list means match all.&#10;" name="parameterFilter">
            <mal:type area="MAL" list="true" name="Long"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The list of required check states to filter on. Empty list means match all.&#10;" name="stateFilter">
            <mal:type area="MC" list="true" name="CheckState" service="Check"/>
          </mal:field>
        </mal:composite>
        <mal:composite comment="The CheckSummary structure holds details about a specific check link and its evaluated result.&#10;" name="CheckSummary" shortFormPart="10">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <mal:field canBeNull="false" comment="The object instance identifier of the check link.&#10;" name="linkId">
            <mal:type area="MAL" list="false" name="Long"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The object instance key of the parameter definition being checked.&#10;" name="parameterId">
            <mal:type area="COM" list="false" name="ObjectKey"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The time stamp of the check result.&#10;" name="evaluationTime">
            <mal:type area="MAL" list="false" name="Time"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The check result value.&#10;" name="result">
            <mal:type area="MC" list="false" name="CheckResult" service="Check"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="Two COM objects shall be used to hold the check definition details, the first is a CheckDefinition COM object that holds the name of the check definition and a second COM object that holds the actual definition of the check.&#10;The actual check definition details shall be represented as one of the specific check definition COM objects (ConstantCheck, ReferenceCheck, DeltaCheck, LimitCheck).&#10;The CheckDefinition object shall use the source link to indicate which actual COM definition object (ConstantCheck, ReferenceCheck, DeltaCheck, LimitCheck) it uses.&#10;The link between which parameters are being evaluated for each check shall be represented as CheckLink COM objects.&#10;The CheckLink object shall use the related link to indicate which CheckDefinition object it uses.&#10;The CheckLink object shall use the source link to indicate which ParameterDefinition object it is checking.&#10;Violations of a check evaluation or the maximum reporting interval expiring shall be represented as CheckTransition COM events.&#10;The CheckTransition event objects shall use the related link to indicate which CheckLink object it uses.&#10;The CheckTransition event objects shall use the source link to indicate what object (if any) caused it to be evaluated, most likely the relevant ParameterValue object or the COM OperationActivity object of a triggerCheck operation.&#10;">
          <com:object name="CheckDefinition" number="1">
            <com:objectType>
              <mal:type area="MAL" list="false" name="Identifier"/>
            </com:objectType>
            <com:sourceObject comment="Links to the actual check definition object such as ConstantCheck&#10;"/>
          </com:object>
          <com:object name="CheckLink" number="2">
            <com:objectType>
              <mal:type area="MC" list="false" name="CheckLink" service="Check"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType area="MC" number="1" service="Check"/>
            </com:relatedObject>
            <com:sourceObject>
              <com:objectType area="MC" number="1" service="Parameter"/>
            </com:sourceObject>
          </com:object>
          <com:object name="ConstantCheck" number="4">
            <com:objectType>
              <mal:type area="MC" list="false" name="ConstantCheck" service="Check"/>
            </com:objectType>
          </com:object>
          <com:object name="ReferenceCheck" number="5">
            <com:objectType>
              <mal:type area="MC" list="false" name="ReferenceCheck" service="Check"/>
            </com:objectType>
          </com:object>
          <com:object name="DeltaCheck" number="6">
            <com:objectType>
              <mal:type area="MC" list="false" name="DeltaCheck" service="Check"/>
            </com:objectType>
          </com:object>
          <com:object name="LimitCheck" number="7">
            <com:objectType>
              <mal:type area="MC" list="false" name="LimitCheck" service="Check"/>
            </com:objectType>
          </com:object>
        </com:objects>
        <com:events comment="When a check is evaluated and its state changes, the change in state shall be represented as CheckTransition COM events.&#10;When the maximum reporting interval for a check expires a CheckTransition COM event shall be generated.&#10;The CheckTransition event shall use the related link to indicate which CheckLink object it uses.&#10;The CheckTransition event shall use the source link to indicate what object (if any) caused it to be evaluated.&#10;The event shall be published using the COM event service.&#10;&#10;">
          <com:event name="CheckTransition" number="3">
            <com:objectType>
              <mal:type area="MC" list="false" name="CheckResult" service="Check"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType area="MC" number="2" service="Check"/>
            </com:relatedObject>
            <com:sourceObject comment="The object that caused the check evaluation to occur, most likely the relevant ParameterValue object.&#10;"/>
          </com:event>
        </com:events>
        <com:archiveUsage comment="CheckDefinition objects should be stored in the COM archive.&#10;The COM objects that hold the actual check definition details (such as ConstantCheck, ReferenceCheck, DeltaCheck, LimitCheck) should be stored in the COM archive.&#10;CheckLink objects should be stored in the COM archive.&#10;When a check transition event is published, the event should be stored in the COM archive.&#10;"/>
      </com:features>
    </mal:service>
    
    
    
    
    
    
    <mal:service comment="The aggregation service allows the user to acquire several parameters in a single request.&#10;Aggregations can be generated by one of two mechanisms, either periodic or ad-hoc. Periodic is where they are generated at a specific generation interval; in this case the periodicity is an aspect of the aggregation rather than the contained parameters. Ad-hoc is when the aggregation generation is triggered by some other deployment-specific mechanism.&#10;Secondary to the generation mode is filtering. Filtering is where an aggregation is only generated when the change in the value of the filtered parameters exceeds a specified threshold or a timeout is passed. Filtering can be applied to both periodic and ad-hoc aggregations.&#10;As there may be a large amount of time between updates of an aggregation when filtering is applied, the filtering concept also has a maximum reporting interval. If an update to the aggregation has not passed the filter in the maximum reporting interval an update is generated regardless. This allows there to be regular updates of an aggregation sent regardless of filtering.&#10;The MO Database is used to hold the definitions of the aggregation." name="Aggregation" number="6" xsi:type="com:ExtendedServiceType">
      <mal:capabilitySet number="1">
        <mal:pubsubIP comment="The monitorValue operation allows a consumer to subscribe for aggregation value updates.&#10;NOTE: This operation has limited support in the OBSW. The MC::Aggregation service sends all the notification messages to the Ground Segment by default (only one subscriber), and there is no option to add/remove other subscribers." name="monitorValue" number="1" supportInReplay="true">
          <mal:messages>
            <mal:publishNotify comment="The MAL EntityKey.firstSubKey shall contain the aggregation name.&#10;The MAL EntityKey.secondSubKey shall contain the aggregation definition object instance identifier.&#10;The MAL EntityKey.thirdSubKey shall contain the aggregation value object instance identifier.&#10;The MAL EntityKey.fourthSubKey shall be NULL.&#10;The timestamp of the aggregation value update shall be taken from the publish message.&#10;The publish message shall include the ObjectId of the source link of the update.&#10;If no source link is needed then it shall be replaced with a NULL.&#10;The second part of the publish message shall be the aggregation update value.&#10;">
              <mal:type area="COM" list="false" name="ObjectId"/>
              <mal:type area="MC" list="false" name="AggregationValue" service="Aggregation"/>
            </mal:publishNotify>
          </mal:messages>
        </mal:pubsubIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2">
        <mal:requestIP comment="The getValue operation returns the latest value for a requested aggregation." name="getValue" number="2" supportInReplay="true">
          <mal:messages>
            <mal:request comment="The request shall include a list of aggregation definition object instance identifiers.&#10;The wildcard value of '0' shall be supported and matches all aggregations of the provider.&#10;If a request aggregation is unknown then an UNKNOWN error shall be returned.">
              <mal:type area="MAL" list="true" name="Long"/>
            </mal:request>
            <mal:response comment="The response shall contain a list of returned aggregation definition object instance identifiers and a matching list of aggregation values.">
              <mal:type area="MAL" list="true" name="Long"/>
              <mal:type area="MC" list="true" name="AggregationValue" service="Aggregation"/>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more of the requested aggregations is unknown.">
              <mal:type area="MAL" list="false" name="UNKNOWN"/>
              <mal:extraInformation comment="The indexes of the error values shall be contained in the extra information field.">
                <mal:type area="MAL" list="true" name="UInteger"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="3">
        <mal:submitIP comment="The enableGeneration operation allows a consumer to control whether updates for specific aggregations are generated or not. It allows the consumer to select the aggregations directly or indirectly using groups. This affects all types of aggregations, periodic, filtered and ad-hoc." name="enableGeneration" number="3" supportInReplay="false">
          <mal:messages>
            <mal:submit comment="The first part of the request shall be a Boolean indicating whether the supplied object instance identifiers are group objects or aggregation objects.&#10;If the initial Boolean is TRUE then the object instance identifiers are group identifiers, otherwise they shall be Aggregation Definition identifiers.&#10;The request shall include a list of object instance identifiers and Boolean value pairs.&#10;The wildcard value of '0' in the list of object instance identifiers shall be supported and matches all aggregations of the provider.&#10;For the Boolean value in the InstanceBooleanPair a value of TRUE requests that updates of the aggregation shall be generated, a value of FALSE requests that updates will not be generated.&#10;If a requested aggregation or group is unknown then an UNKNOWN error shall be returned.&#10;If a requested group is does not contain aggregation definition objects then an INVALID error shall be returned.&#10;If the current generation enabled value of a matched aggregation definition is the same as the supplied value no error shall be generated. I.e. enabling an already enabled aggregation will not raise an error.&#10;The provider should update the aggregation definition in the COM archive if the generation enabled value is changed.&#10;">
              <mal:type area="MAL" list="false" name="Boolean"/>
              <mal:type area="COM" list="true" name="InstanceBooleanPair"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more of the requested aggregations is unknown.&#10;">
              <mal:type area="MAL" list="false" name="UNKNOWN"/>
              <mal:extraInformation comment="The indexes of the error values shall be contained in the extra information field.&#10;">
                <mal:type area="MAL" list="true" name="UInteger"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One of the supplied groups is not a group of aggregation definitions.&#10;">
              <mal:type area="COM" list="false" name="INVALID"/>
              <mal:extraInformation comment="The extra information field contains the indexes of the erroneous values from the originating list supplied.&#10;">
                <mal:type area="MAL" list="true" name="UInteger"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="4">
        <mal:requestIP comment="The listDefinition operation allows a consumer to request the object instance identifiers of the aggregation definitions for the supported aggregations of the provider. It is expected to be used in conjunction with the COM archive which holds the actual aggregation definition objects.&#10;" name="listDefinition" number="5" supportInReplay="true">
          <mal:messages>
            <mal:request comment="The request shall contain a list of aggregation names to retrieve the aggregation definition object instance identifiers for.&#10;The request may contain the wildcard value of '*' to return all supported aggregation definitions.&#10;">
              <mal:type area="MAL" list="true" name="Identifier"/>
            </mal:request>
            <mal:response comment="The response shall contain a list of matching aggregation definition object instance identifiers.&#10;">
              <mal:type area="MAL" list="true" name="Long"/>
            </mal:response>
          </mal:messages>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="5">
        <mal:requestIP comment="The addDefinition operation allows a consumer to define one or more aggregations that do not currently exist.&#10;The new aggregation definition is expected to be stored in the COM archive by the provider of the aggregation service.&#10;" name="addDefinition" number="6" supportInReplay="false">
          <mal:messages>
            <mal:request comment="The supplied list shall hold the definitions to be added.&#10;The name field of the supplied AggregationDefinition structures must not be NULL, the wildcard '*', or empty (an INVALID error shall be returned in this case).&#10;The supplied name must be unique for the domain of the provider otherwise a DUPLICATE error will be raised.&#10;">
              <mal:type area="MC" list="true" name="AggregationDefinition" service="Aggregation"/>
            </mal:request>
            <mal:response comment="The response shall contain the list of object instance identifiers for the new definitions.&#10;The returned list shall maintain the same order as the submitted definitions.&#10;">
              <mal:type area="MAL" list="true" name="Long"/>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more of the aggregation definitions being added has supplied an aggregation name that is already in use in the domain.&#10;">
              <mal:type area="COM" list="false" name="DUPLICATE"/>
              <mal:extraInformation comment="The extra information field contains the indexes of the erroneous values from the originating request list.&#10;">
                <mal:type area="MAL" list="true" name="UInteger"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One of the supplied aggregation definitions contains an invalid name.&#10;">
              <mal:type area="COM" list="false" name="INVALID"/>
              <mal:extraInformation comment="The extra information field contains the indexes of the erroneous values from the originating list supplied.&#10;">
                <mal:type area="MAL" list="true" name="UInteger"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <mal:submitIP comment="The updateDefinition operation allows a consumer to modify a definition for one or more aggregations without needing to delete the existing definition first.&#10;This differs from deleting an existing definition and adding a new definition with the same aggregation name in the fact that the object instance identifier is not changed between the two definitions therefore it is only expected to be used for minor modifications such as descriptions.&#10;The operation cannot be used to change the name of an existing aggregation definition, removal of the existing definition and adding the new definition must be used in this case.&#10;The replacement definition should be stored in the COM archive.&#10;" name="updateDefinition" number="7" supportInReplay="false">
          <mal:messages>
            <mal:submit comment="The submitted lists shall hold the definitions to be modified.&#10;The first list shall contain the object instance identifiers of the aggregation definitions to be updated.&#10;The second list shall contain the replacement aggregation definitions.&#10;The two lists shall be ordered the same.&#10;The supplied object instance identifiers shall match existing definitions, an UNKNOWN error shall be raised if this is not the case.&#10;The supplied aggregation definition name must match the name in the existing definition for the corresponding aggregation object instance identifier otherwise an INVALID error is returned.&#10;">
              <mal:type area="MAL" list="true" name="Long"/>
              <mal:type area="MC" list="true" name="AggregationDefinition" service="Aggregation"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied aggregation definition object instance identifiers is unknown.&#10;">
              <mal:type area="MAL" list="false" name="UNKNOWN"/>
              <mal:extraInformation comment="The indexes of the error values shall be contained in the extra information field.&#10;">
                <mal:type area="MAL" list="true" name="UInteger"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One of the supplied aggregation definitions is trying to change its name.&#10;">
              <mal:type area="COM" list="false" name="INVALID"/>
              <mal:extraInformation comment="The extra information field contains the indexes of the erroneous values from the originating list supplied.&#10;">
                <mal:type area="MAL" list="true" name="UInteger"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
        <mal:submitIP comment="The removeDefinition operation allows a consumer to remove one or more definitions from the list of aggregations supported by the aggregation provider.&#10;The operation does not remove the aggregation definition from the COM archive, merely removes it from the provider. This permits existing aggregation value instances to continue to reference the correct aggregation definition in the COM archive.&#10;" name="removeDefinition" number="8" supportInReplay="false">
          <mal:messages>
            <mal:submit comment="The supplied list holds the object instance identifiers of the definitions to be removed from the provider.&#10;The list may contain the wildcard value of '0'.&#10;If a provided definition instance identifier does not include a wildcard and does not match an existing definition then this operation shall fail with an UNKNOWN error.&#10;Removed definitions still exist in the COM archive.&#10;The operation shall either completely succeed or fail, in the case of a fail no definitions shall be removed.&#10;If the operation succeeds then the provider shall not publish aggregation value instances for the deleted aggregation definitions anymore.&#10;">
              <mal:type area="MAL" list="true" name="Long"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied aggregation definition object instance identifiers is unknown.&#10;">
              <mal:type area="MAL" list="false" name="UNKNOWN"/>
              <mal:extraInformation comment="The indexes of the error values shall be contained in the extra information field.&#10;">
                <mal:type area="MAL" list="true" name="UInteger"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:enumeration comment="AggregationCategory is an enumeration definition holding the categories of aggregations." name="AggregationCategory" shortFormPart="5">
          <mal:item comment="General aggregation." nvalue="1" value="GENERAL"/>
          <mal:item comment="Diagnostic aggregation." nvalue="2" value="DIAGNOSTIC"/>
        </mal:enumeration>
        <mal:enumeration comment="ThresholdType is an enumeration definition holding the types of filtering thresholds." name="ThresholdType" shortFormPart="6">
          <mal:item comment="Threshold value is a percentage.&#10;" nvalue="1" value="PERCENTAGE"/>
          <mal:item comment="Threshold value is a delta.&#10;" nvalue="2" value="DELTA"/>
        </mal:enumeration>
        <mal:enumeration comment="GenerationMode is an enumeration definition holding the reasons for the aggregation to be generated.&#10;" name="GenerationMode" shortFormPart="7">
          <mal:item comment="The aggregation value was generated because of an ad-hoc implementation dependent reason.&#10;" nvalue="1" value="ADHOC"/>
          <mal:item comment="The aggregation value was generated because of a periodic update.&#10;" nvalue="2" value="PERIODIC"/>
          <mal:item comment="The item is filtered but it exceeded its timeout value.&#10;" nvalue="3" value="FILTERED_TIMEOUT"/>
        </mal:enumeration>
        <mal:composite comment="The AggregationDefinition defines the structure of an aggregation.&#10;" name="AggregationDefinition" shortFormPart="1">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <mal:field canBeNull="false" comment="The name of the aggregation. Must not be empty or the wildcard value.&#10;" name="name">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The description of the parameter. May be empty.&#10;" name="description">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
          <mal:field canBeNull="false" comment="Category of the aggregation." name="category">
            <mal:type area="MC" list="false" name="AggregationCategory" service="Aggregation"/>
          </mal:field>
          <mal:field canBeNull="false" comment="Controls whether updates for this aggregation are to be generated.&#10;" name="generationEnabled">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The interval between periodic updates on this aggregation. If this aggregation is not periodic, this field must be '0'.&#10;" name="updateInterval">
            <mal:type area="MAL" list="false" name="Duration"/>
          </mal:field>
          <mal:field canBeNull="false" comment="Controls whether updates for this aggregation are to be filtered.&#10;" name="filterEnabled">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The maximum duration between filtered updates. If this value is exceeded, then an update is sent regardless of filtered thresholds. Ignored if not filtered.&#10;" name="filteredTimeout">
            <mal:type area="MAL" list="false" name="Duration"/>
          </mal:field>
          <mal:field canBeNull="false" comment="List containing the parameter sets which define the aggregation.&#10;" name="parameterSets">
            <mal:type area="MC" list="true" name="AggregationReference" service="Aggregation"/>
          </mal:field>
        </mal:composite>
        <mal:composite comment="The AggregationValue structure holds the values for one or more sets of parameter values. The values must be held in the same order as that defined in the aggregation definition.&#10;" name="AggregationValue" shortFormPart="2">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <mal:field canBeNull="false" comment="Reason for the aggregation being generated.&#10;" name="generationMode">
            <mal:type area="MC" list="false" name="GenerationMode" service="Aggregation"/>
          </mal:field>
          <mal:field canBeNull="false" comment="If a filter is enabled when the aggregation value is generated then this value shall be set to TRUE, else FALSE.&#10;" name="filtered">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <mal:field canBeNull="true" comment="Optional delta time, from the time stamp of the aggregation, for the first parameter sample. If NULL, then the first sample time is the same as the aggregation time stamp.&#10;" name="deltaTime">
            <mal:type area="MAL" list="false" name="Duration"/>
          </mal:field>
          <mal:field canBeNull="true" comment="Optional delta time between samples in a single set. If NULL, then all samples in that set are given the same time.&#10;" name="intervalTime">
            <mal:type area="MAL" list="false" name="Duration"/>
          </mal:field>
          <mal:field canBeNull="true" comment="Optional delta time between the last sample of a set and the first sample of the next set. If NULL, then the first sample of a set is given the same time as the last sample of the previous set.&#10;" name="setIntervalTime">
            <mal:type area="MAL" list="false" name="Duration"/>
          </mal:field>
          <mal:field canBeNull="false" comment="List containing values of the parameters which are part of the aggregation. The ordering of the list entries shall match that of the definition of the aggregation. If a value for a particular entity is not being supplied, then its position shall be filled with a NULL value. If there are more values than contained in the definition then it is assumed that the parameters cycle as parameter sets.&#10;" name="values">
            <mal:type area="MC" list="true" name="ParameterValue" service="Parameter"/>
          </mal:field>
        </mal:composite>
        <mal:composite comment="The AggregationReference structure holds the identifier and optional filter for a parameter in an aggregation.&#10;" name="AggregationReference" shortFormPart="3">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <mal:field canBeNull="true" comment="The domain of the parameters being referenced in this set of parameters, NULL if the same domain as the aggregation.&#10;" name="domain">
            <mal:type area="MAL" list="true" name="Identifier"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The list of object instance identifiers of the parameter definitions being included in the aggregation.&#10;" name="parameters">
            <mal:type area="MAL" list="true" name="Long"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The interval between samples of the parameters in the set. If '0' then just a single sample of the parameters is required per aggregation update.&#10;" name="sampleInterval">
            <mal:type area="MAL" list="false" name="Duration"/>
          </mal:field>
          <mal:field canBeNull="true" comment="If the AggregationReference contains a single parameter then this field contains the filter to apply for filtered periodic updates when filters are applied. NULL if no filter required or this aggregation reference contains more than one parameter.&#10;" name="periodicFilter">
            <mal:type area="MC" list="false" name="ThresholdFilter" service="Aggregation"/>
          </mal:field>
        </mal:composite>
        <mal:composite comment="The ThresholdFilter structure holds the filter for a parameter.&#10;" name="ThresholdFilter" shortFormPart="4">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <mal:field canBeNull="false" comment="The type of filter to apply for filtered periodic updates when filters are applied." name="thresholdType">
            <mal:type area="MC" list="false" name="ThresholdType" service="Aggregation"/>
          </mal:field>
          <mal:field canBeNull="false" comment="Threshold value to apply." name="thresholdValue">
            <mal:type area="MAL" list="false" name="Attribute"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="The definitions of the aggregations shall be represented as AggregationDefinition COM objects.&#10;Aggregation value updates shall be represented as AggregationValue COM objects.&#10;The AggregationValue object shall use the related link to indicate which AggregationDefinition object it uses.&#10;The source link of the AggregationDefinition object should be the object that caused it to be created, most likely a COM OperationActivity object.&#10;The source link of the AggregationValue object should be the object that caused the update to be generated.&#10;">
          <com:object name="AggregationDefinition" number="1">
            <com:objectType>
              <mal:type area="MC" list="false" name="AggregationDefinition" service="Aggregation"/>
            </com:objectType>
                        <com:relatedObject comment=""/>
                        <com:sourceObject comment=""/>
          </com:object>
          <com:object name="AggregationValue" number="2">
            <com:objectType>
              <mal:type area="MC" list="false" name="AggregationValue" service="Aggregation"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType area="MC" number="1" service="Aggregation"/>
            </com:relatedObject>
                        <com:sourceObject comment=""/>
          </com:object>
        </com:objects>
        <com:archiveUsage comment="AggregationDefinition objects should be stored in the COM archive.&#10;When an aggregation value update is published, the AggregationValue object should be stored in the COM archive.&#10;"/>
      </com:features>
    </mal:service>
    <mal:dataTypes>
      <mal:enumeration comment="The severity enumeration holds the possible values for a severity. Normally, for checks, only the Warning and Critical ranges are used: the colour yellow is associated with Warning, and the colour red is associated with Critical.&#10;" name="Severity" shortFormPart="6">
        <mal:item comment="Indicates a nominal situation with no consequences.&#10;" nvalue="1" value="INFORMATIONAL"/>
        <mal:item comment="Indicates unexpected behaviour without directly threatening consequences.&#10;" nvalue="2" value="WARNING"/>
        <mal:item comment="Indicates behaviour of serious concern requiring the attention of an operator, but not necessarily a malfunction.&#10;" nvalue="3" value="ALARM"/>
        <mal:item comment="Indicates that the monitored item has malfunctioned. Requires operator attention.&#10;" nvalue="4" value="SEVERE"/>
        <mal:item comment="Indicates behaviour with mission threatening consequences. Requires operator attention.&#10;" nvalue="5" value="CRITICAL"/>
      </mal:enumeration>
      <mal:composite comment="The ArgumentDefinition structure holds a specific instance of an argument definition with a set of associated attributes, such as conversion used. The conversionCondition defines the conditions where the referenced conversion is applied.&#10;" name="ArgumentDefinition" shortFormPart="1">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <mal:field canBeNull="false" comment="Holds the attribute short form part of the raw type of the argument, e.g., for a MAL::String argument it shall hold 15.&#10;" name="rawType">
          <mal:type area="MAL" list="false" name="Octet"/>
        </mal:field>
        <mal:field canBeNull="true" comment="The unit for the raw value." name="rawUnit">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <mal:field canBeNull="true" comment="The conversion applied to the argument." name="conversionCondition">
          <mal:type area="MC" list="true" name="ConditionalReference"/>
        </mal:field>
        <mal:field canBeNull="true" comment="Holds the attribute short form part of the converted type of the argument, e.g., for a MAL::String argument it shall hold 15. Must not be NULL if a conversion condition is supplied.&#10;" name="convertedType">
          <mal:type area="MAL" list="false" name="Octet"/>
        </mal:field>
        <mal:field canBeNull="true" comment="The converted argument units." name="convertedUnit">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>
      <mal:composite comment="The ArgumentValue structure holds a specific value of an argument. It holds either the converted or the raw value." name="ArgumentValue" shortFormPart="2">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <mal:field canBeNull="false" comment="If TRUE, the supplied argument value is the converted value, otherwise it is the raw value.&#10;" name="isConvertedValue">
          <mal:type area="MAL" list="false" name="Boolean"/>
        </mal:field>
        <mal:field canBeNull="true" comment="The argument value." name="value">
          <mal:type area="MAL" list="false" name="Attribute"/>
        </mal:field>
      </mal:composite>
      <mal:composite comment="The ConditionalReference structure holds a condition expression to be evaluated to determine if another item should be referenced. In the case that no test is required, i.e., the item should always be referenced, then the condition field should be set to NULL.&#10;" name="ConditionalReference" shortFormPart="3">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <mal:field canBeNull="true" comment="The expression indicates which entities are applicable for this check. If NULL, then the condition shall evaluate to TRUE.&#10;" name="condition">
          <mal:type area="MC" list="false" name="ParameterExpression"/>
        </mal:field>
        <mal:field canBeNull="false" comment="Entity that should be referenced if the condition evaluates to TRUE or is NULL.&#10;" name="referenceId">
          <mal:type area="COM" list="false" name="ObjectId"/>
        </mal:field>
      </mal:composite>
      <mal:composite comment="The ParameterExpression structure represents a simple expression between a parameter and a value for that parameter.&#10;" name="ParameterExpression" shortFormPart="4">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <mal:field canBeNull="false" comment="Identifies the parameter definition to be used in the expression.&#10;" name="parameterId">
          <mal:type area="COM" list="false" name="ObjectKey"/>
        </mal:field>
        <mal:field canBeNull="false" comment="The expression operator." name="operator">
          <mal:type area="COM" list="false" name="ExpressionOperator" service="Archive"/>
        </mal:field>
        <mal:field canBeNull="false" comment="If set to TRUE the converted value field of the parameter value should be used, otherwise the raw value field should be used.&#10;" name="useConverted">
          <mal:type area="MAL" list="false" name="Boolean"/>
        </mal:field>
        <mal:field canBeNull="true" comment="The value to be used in the expression." name="value">
          <mal:type area="MAL" list="false" name="Attribute"/>
        </mal:field>
      </mal:composite>
      <mal:composite comment="The AttributeValue structure holds an Attribute value. It allows a list of different Attribute types to be created whereas List&lt;Attribute&gt; would require the values to be all of the same type.&#10;" name="AttributeValue" shortFormPart="7">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <mal:field canBeNull="false" comment="The argument value. Must not be NULL. NULL may be represented by having a NULL in place of the complete AttributeValue composite.&#10;" name="value">
          <mal:type area="MAL" list="false" name="Attribute"/>
        </mal:field>
      </mal:composite>
    </mal:dataTypes>
  </mal:area>
</mal:specification>